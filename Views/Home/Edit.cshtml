@model FeeManagement.Models.Student

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/AdLayout.cshtml";
}
<head>

    <title>Admin - Edit Student</title>

</head>
<h3 class="text-center" style="font-weight:bolder">Admin Operation <span style="color:brown">( Edit - Student )</span></h3>

@using (Html.BeginForm("Edit", "Home"))
{


    <div class="container m-3 pb-3">
        <div class="row shadow pt-4 bg-white p-4 rounded">
            <div class="col-sm pt-2">

                <div class="form-group">
                    <div class="d-flex flex-row align-items-center mb-4">
                        <i class="fas fa-id-badge fa-lg me-3 fa-fw"></i>
                        <div class="form-outline flex-fill mb-0 col-md-9">
                            @Html.EditorFor(model => model.StdRollNo, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "Student Roll No.", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.StdPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="d-flex flex-row align-items-center mb-4">
                        <i class="fas fa-user-graduate fa-lg me-3 fa-fw"></i>
                        <div class="form-outline flex-fill mb-0 col-md-9">
                            @Html.EditorFor(model => model.StdName, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "Student Name" } })
                            @Html.ValidationMessageFor(model => model.StdName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <span id="status"></span>
                    <div class="d-flex flex-row align-items-center mb-4">
                        <i class="fas fa-envelope fa-lg me-3 fa-fw"></i>
                        <div class="form-outline flex-fill mb-0 col-md-9">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control , border border-top-0", onchange = "emailcheck()", placeholder = "email@smstr.edu.pk", required = "required", id = "emailid" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="d-flex flex-row align-items-center mb-4">
                        <i class="fas fa-calendar-alt fa-lg me-3 fa-fw"></i>
                        <div class="form-outline flex-fill mb-0 col-md-9">
                            @Html.EditorFor(model => model.StdAge, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "Student Age" } })
                            @Html.ValidationMessageFor(model => model.StdAge, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="d-flex flex-row align-items-center mb-4">
                        <i class="fas fa-user-friends fa-lg me-3 fa-fw"></i>
                        <div class="form-outline flex-fill mb-0 col-md-9">
                            <span class="font-weight-bold text-danger">
                                @Html.LabelFor(model => model.Gender, new { htmlAttributes = new { @class = "control-label col-md-2 " } })
                            </span>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.Gender, "Male", new { @name = "gender" })
                                Male
                            </label>
                            <label class="radio-inline">
                                @Html.RadioButtonFor(model => model.Gender, "Female", new { @name = "gender" })
                                Female
                            </label>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="d-flex flex-row align-items-center mb-4">
                        <i class="fas fa-list-ol fa-lg me-3 fa-fw"></i>
                        <div class="form-outline flex-fill mb-0 col-md-9">
                            @Html.EditorFor(model => model.Semester, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "Student Semester", required = "required" } })
                            @Html.ValidationMessageFor(model => model.StdAge, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>

            <div class="col-sm pt-2">
                <div class="form-group">
                    <div class="d-flex flex-row align-items-center mb-4">
                        <i class="fas fa-eye fa-lg me-3 fa-fw"></i>
                        <div class="form-outline flex-fill mb-0 col-md-9">
                            @Html.EditorFor(model => model.StdPassword, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "Student Password" } })
                            @Html.ValidationMessageFor(model => model.StdPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="d-flex flex-row align-items-center mb-4">
                        <i class="fas fa-user-friends fa-lg me-3 fa-fw"></i>
                        <div class="form-outline flex-fill mb-0 col-md-9">
                            @Html.EditorFor(model => model.StdFName, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "Student Father Name" } })
                            @Html.ValidationMessageFor(model => model.StdFName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="d-flex flex-row align-items-center mb-4">
                        <i class="fas fa-home fa-lg me-3 fa-fw"></i>
                        <div class="form-outline flex-fill mb-0 col-md-9">
                            @Html.EditorFor(model => model.StdAddress, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "Student Address" } })
                            @Html.ValidationMessageFor(model => model.StdAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="d-flex flex-row align-items-center mb-4">
                        <i class="fas fa-arrow-alt-circle-down fa-lg me-3 fa-fw"></i>
                        <div class="form-outline flex-fill mb-0 col-md-9">
                            @Html.DropDownListFor(model => model.SemesterId, ViewBag.SemesterList as SelectList, "-- Select Department --")
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="d-flex flex-row align-items-center mb-4">
                        <i class="fas fa-building fa-lg me-3 fa-fw"></i>
                        <div class="form-outline flex-fill mb-0 col-md-9">
                            @Html.DropDownListFor(model => model.CampusId, ViewBag.CampusList as SelectList, "-- Select Campus --", new { id = "MyCampus", htmlAttributes = new { @class = "form-control", required = "required" } })
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-primary rounded-pill" />
                <a href="~/Home/StudentList">
                    <input type="button" value="Back" class="btn btn-danger rounded-pill" />
                </a>
            </div>

        </div>
    </div>

    @Html.HiddenFor(model => model.StdId)
    @Html.HiddenFor(model => model.SemesterId, new { id = "olddepid" })

    <script>

        $(document).ready(function () {
            var rollno = $('#StdRollNo').val();

            $('#SemesterId').on("change", function () {

                var oldid = $('#olddepid').val();
                var newid = $('#SemesterId').val();
                if (oldid != newid)
                {
                    var data = Retrivedata('/Home/RollNo', { Semesterid: newid });
                    $('#StdRollNo').val(parseInt(data) + 1);
                }
                else {
                    $('#StdRollNo').val(rollno);
                }

            });

        });

        function emailcheck()
        {
            $("#status").html("Checking....");
            $.post("@Url.Action("check_email" , "Home")",
            {
                emailuser: $("#emailid").val()
            },
                function (data) {
                    if (data == 0) {
                        $("#status").html('<font color ="Green"> Email Available </font>');
                        $("emailid").css("border-color", "Green");
                    }
                    else
                    {
                        $("#status").html('<font color ="Red"> Email Already In Use </font>');
                        $("emailid").css("border-color", "Red");
                    }
                });
        }

    </script>

}

