@model FeeManagement.Models.Student

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/AdLayout.cshtml";
}
<head>

    <title>Admin - Add Student Fees</title>

</head>
<h3 class="text-center" style="font-weight:bolder">Admin Operation <span style="color:brown">( Add - Student Fees )</span></h3>


@if (Model != null)
{

    using (Html.BeginForm("Add", "Home"))
    {
        @Html.HiddenFor(model => model.StdId)
        @Html.HiddenFor(model => model.Semester)

        <div class="container m-3 pb-3">
            <div class="row shadow pt-4 bg-white p-4 rounded">
                <div class="col-sm pt-2">
                    <div class="form-group">
                        <div class="d-flex flex-row align-items-center mb-4">
                            <i class="fas fa-id-badge fa-lg me-3 fa-fw"></i>
                            <div class="form-outline flex-fill mb-0 col-md-9">
                                <b> Roll # </b> @Html.EditorFor(model => model.StdRollNo, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "Student Roll No.", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.StdRollNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="d-flex flex-row align-items-center mb-4">
                            <i class="fas fa-user-graduate fa-lg me-3 fa-fw"></i>
                            <div class="form-outline flex-fill mb-0 col-md-9">
                                <b> Student Name</b> @Html.EditorFor(model => model.StdName, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "Student Name", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.StdName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <span id="status"></span>
                        <div class="d-flex flex-row align-items-center mb-4">
                            <i class="fas fa-user-friends fa-lg me-3 fa-fw"></i>
                            <div class="form-outline flex-fill mb-0 col-md-9">
                                <b>Student Father Name</b> @Html.EditorFor(model => model.StdFName, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "email@smstr.edu.pk", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.StdFName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="d-flex flex-row align-items-center mb-4">
                            <i class="fas fa-sort-amount-up-alt fa-lg me-3 fa-fw"></i>
                            <div class="form-outline flex-fill mb-0 col-md-9">
                                <b>Current Receive Amount</b> @Html.EditorFor(model => model.FeesAmount, new { htmlAttributes = new { @class = "form-control , border border-top-0", required = "required" } })
                                @Html.ValidationMessageFor(model => model.StdFName, "", new { @class = "text-danger" })
                                (Remove 0 Enter Amount )
                            </div>
                        </div>
                    </div>
                    @*@if (Model.Semester > 1)
                    {
                    <div class="form-group">
                        <div class="d-flex flex-row align-items-center mb-4">
                            <i class="fas fa-sort-amount-up-alt fa-lg me-3 fa-fw"></i>
                            <div class="form-outline flex-fill mb-0 col-md-9">
                                <b>Total & Previous Remain</b><br /> @{ var x = Model.TotalFees;
                                    var y = Model.previousRemainFees;
                                    var z = x + y;
                                    }Total Fee @x , Previous Remain @y = Total @z
                                @Html.ValidationMessageFor(model => model.StdFName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>}*@

                </div>

                <div class="col-sm pt-2">

                    <div class="form-group">
                        <div class="d-flex flex-row align-items-center mb-4">
                            <i class="fas fa-envelope fa-lg me-3 fa-fw"></i>
                            <div class="form-outline flex-fill mb-0 col-md-9">
                                <b>  Student Email</b> @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "Student Father Name", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="d-flex flex-row align-items-center mb-4">
                            <b><i><h4 style="font-size:25px">Rs</h4></i></b>
                            <div class="form-outline flex-fill mb-0 col-md-9">
                                <b>Total Fee's</b>  @Html.EditorFor(model => model.TotalFees, new { htmlAttributes = new { @class = "form-control , border border-top-0", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.FeesAmount, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="d-flex flex-row align-items-center mb-4">
                            <i class="fas fa-cash-register fa-lg me-3 fa-fw"></i>
                            <div class="form-outline flex-fill mb-0 col-md-9">
                                <b> Total Paid Fee's </b> @Html.EditorFor(model => model.paidAmount, new { htmlAttributes = new { @class = "form-control , border border-top-0", placeholder = "Student Father Name", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.StdFName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    @if (Model.paidAmount > Model.TotalFees)
                    {
                    <div class="form-group">
                        <div class="d-flex flex-row align-items-center mb-4">
                            <i class="fas fa-sort-amount-down-alt fa-lg me-3 fa-fw"></i>
                            <div class="form-outline flex-fill mb-0 col-md-9">
                                <b>Extra Paid Fee's (Ignore Minus )</b> @Html.EditorFor(model => model.RemainFees, new { htmlAttributes = new { @class = "form-control , border border-top-0", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.RemainFees, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    }
                    else
                    {
                    <div class="form-group">
                        <div class="d-flex flex-row align-items-center mb-4">
                            <i class="fas fa-sort-amount-down-alt fa-lg me-3 fa-fw"></i>
                            <div class="form-outline flex-fill mb-0 col-md-9">
                                <b>Remaining Fee's</b> @Html.EditorFor(model => model.RemainFees, new { htmlAttributes = new { @class = "form-control , border border-top-0", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.RemainFees, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>}
                    @*@if (Model.Semester > 1)
                    {
                    <div class="form-group">
                        <div class="d-flex flex-row align-items-center mb-4">
                            <i class="fas fa-sort-amount-down-alt fa-lg me-3 fa-fw"></i>
                            <div class="form-outline flex-fill mb-0 col-md-9">
                                <b>Previous Remaining Fee's</b> @Html.EditorFor(model => model.previousRemainFees, new { htmlAttributes = new { @class = "form-control , border border-top-0", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.previousRemainFees, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    }*@

                </div>

                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add Fee's" class="btn btn-primary rounded-pill" />
                    <a href="~/Home/AddFeeSelect">
                        <input type="button" value="Back" class="btn btn-danger rounded-pill" />
                    </a>
                </div>

            </div>
        </div>

    }

}
else
{
<center>
    <div class="col-xl-5 col-md-6 mb-4">
        <div class="row shadow pt-4 bg-white p-4 rounded">
            <div class="col-sm pt-2">
                <div class="form-group">
                    <div class="d-flex flex-row align-items-center mb-1">

                        <b>
                            <i>
                                <h3>No Record Found Against This <br /> <br /> Firstly Add Course</h3>
                            </i>
                        </b>

                    </div>
                </div>
                
                    <div class="form-group">
                        <div class="d-flex flex-row align-items-center mb-1">

                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   @Html.ActionLink("Add Course", "AddCourse", "Home", htmlAttributes: new { @class = "btn btn-success" }) --|--
                            @Html.ActionLink("Back Add Fee", "AddFeeSelect", "Home", htmlAttributes: new { @class = "btn btn-danger" })

                        </div> 
                    </div>
               
            </div>
        </div>
    </div>
</center>
 }
